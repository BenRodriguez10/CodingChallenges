@startuml
header House
Client ..> HouseBuilder //Dependency
Client ..> FlatBuilder //Dependency
class Client{
    Director(director)
    HouseBuilder(builder)
    FlatBuilder(flatBuilder)
}
class Director{
    builder: Builder
    contructHouse()
    constructFlat()
}
Director --> Builder
Client --> Director
class House{
    getBuildingType()
    getNumberOfBedrooms()
    getNumberOfBathrooms()
    getGarden()
    print()
}
class Flat{
    getBuildingType()
    getNumberOfBedrooms()
    getNumberOfBathrooms()
    getGarden()
    print()
}
HouseBuilder --> House
Class HouseBuilder {
    result: House
    setBuildingType()
    setNumberOfBedrooms()
    setNumberOfBathrooms()
    getResult(): House
}
FlatBuilder --> Flat
Class FlatBuilder {
    result: Flat
    setBuildingType()
    setNumberOfBedrooms()
    setNumberOfBathrooms()
    getResult(): Flat
}
HouseBuilder ..|> Builder
FlatBuilder ..|> Builder
interface Builder {
    void setBuildingType()
    void setNumberOfBedrooms()
    void setNumberOfBathrooms()
    void setGarden()
}
@enduml